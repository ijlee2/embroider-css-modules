name: CI

on: 
  push:
    branches:
      - main
  pull_request:

env:
  NODE_VERSION: 18
  PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_number }}
  PERCY_PARALLEL_TOTAL: 2

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-location:
          - 'docs/embroider-css-modules'
          - 'docs/embroider-css-modules-temporary'
          - 'docs/sample-v2-addon'
          - 'packages/ember-codemod-remove-ember-css-modules'
          - 'packages/embroider-css-modules'
          - 'packages/embroider-css-modules-temporary'
          - 'packages/type-css-modules'
          - 'tests/embroider-css-modules'
          - 'tests/sample-v2-addon'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint
        working-directory: ${{ matrix.package-location }}


  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-location:
          - 'docs/embroider-css-modules'
          - 'docs/embroider-css-modules-temporary'
          - 'docs/sample-v2-addon'
          - 'packages/ember-codemod-remove-ember-css-modules'
          - 'packages/embroider-css-modules'
          - 'packages/embroider-css-modules-temporary'
          - 'packages/type-css-modules'
          - 'tests/embroider-css-modules'
          - 'tests/sample-v2-addon'
    timeout-minutes: 5
    env:
      RUN_PERCY: ${{ matrix.package-location == 'docs/embroider-css-modules' || matrix.package-location == 'docs/embroider-css-modules-temporary' }}
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test
        if: ${{ env.RUN_PERCY == 'false' }}
        working-directory: ${{ matrix.package-location }}

      - name: Test (w/ visual regression)
        run: npx percy exec -- pnpm test
        if: ${{ env.RUN_PERCY == 'true' }}
        working-directory: ${{ matrix.package-location }}
        env:
          PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
          PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}


  test-compatibility-embroider-css-modules:
    name: Test compatibility (tests/embroider-css-modules)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - 'ember-lts-4.4'
          - 'ember-lts-4.8'
          - 'ember-lts-4.12'
          - 'ember-release'
          - 'ember-beta'
          - 'ember-canary'
          - 'embroider-safe'
          - 'embroider-optimized'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test:ember-compatibility ${{ matrix.scenario }} --- pnpm test
        working-directory: 'tests/embroider-css-modules'


  test-compatibility-sample-v2-addon:
    name: Test compatibility (tests/sample-v2-addon)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - 'ember-lts-4.4'
          - 'ember-lts-4.8'
          - 'ember-lts-4.12'
          - 'ember-release'
          - 'ember-beta'
          - 'ember-canary'
          # - 'embroider-safe'
          # - 'embroider-optimized'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test:ember-compatibility ${{ matrix.scenario }} --- pnpm test
        working-directory: 'tests/sample-v2-addon'
